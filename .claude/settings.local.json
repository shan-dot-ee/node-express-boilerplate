{
  "permissions": {
    "allow": [
      "Bash(yarn lint)",
      "Bash(yarn dev)",
      "Bash(git add:*)",
      "Bash(git commit -m \"$(cat <<''EOF''\nMigrate from MongoDB/Mongoose to PostgreSQL/Sequelize\n\nComplete database migration with comprehensive documentation and migration system.\n\n## Database Changes\n- Replaced MongoDB with PostgreSQL as the primary database\n- Migrated from Mongoose ODM to Sequelize ORM\n- Changed primary keys from ObjectId to UUID\n- Added foreign key constraints and proper indexes\n- Implemented version-controlled database migrations\n\n## Models\n- Updated User model with Sequelize syntax\n- Updated Token model with Sequelize associations\n- Added beforeSave hooks for password hashing\n- Implemented custom methods (isEmailTaken, isPasswordMatch)\n- Added proper model associations (User hasMany Tokens)\n\n## Services\n- Updated user.service.js with Sequelize queries\n- Updated token.service.js for Sequelize compatibility\n- Updated auth.service.js with proper destroy() methods\n- Replaced .remove() with .destroy()\n- Replaced .findById() with .findByPk()\n- Added where clauses for all queries\n\n## Configuration\n- Added Sequelize configuration in src/database/config.js\n- Created .sequelizerc for Sequelize CLI\n- Updated config.js to use DATABASE_URL instead of MONGODB_URL\n- Updated src/index.js to use Sequelize connection\n- Removed express-mongo-sanitize middleware from app.js\n\n## Migrations & Database Management\n- Created migration for users table (20250101000001-create-users.js)\n- Created migration for tokens table (20250101000002-create-tokens.js)\n- Added database management scripts (db:migrate, db:seed, db:reset)\n- Created pagination utility for Sequelize (src/utils/paginate.js)\n\n## Dependencies\n- Added: sequelize@^6.37.5, pg@^8.13.1, pg-hstore@^2.3.4\n- Added: sequelize-cli@^6.6.2, umzug@^3.8.3\n- Removed: mongoose@8.18.3, express-mongo-sanitize@2.2.0\n- Updated keywords: postgresql, sequelize (removed mongodb, mongoose)\n\n## Docker & Environment\n- Updated docker-compose.yml to use postgres:14-alpine\n- Changed service from mongodb to postgres\n- Updated .env.example with DATABASE_URL format\n- Copied .env.example to .env for local development\n\n## Documentation\n- Created docs/DATABASE.md - PostgreSQL setup, migrations, backups\n- Created docs/DEPLOYMENT.md - Production deployment guides\n- Created docs/API_GUIDE.md - API usage with examples\n- Created docs/ARCHITECTURE.md - System architecture documentation\n- Updated README.md with PostgreSQL setup instructions\n- Added database command documentation\n\n## Benefits\n- ACID compliance for data integrity\n- Foreign key constraints enforcement\n- Version-controlled schema changes\n- Better query performance with proper indexes\n- Production-ready relational database\n- Structured migration system\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")"
    ],
    "deny": [],
    "ask": []
  }
}